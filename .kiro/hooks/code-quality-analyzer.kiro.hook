{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis including code smells, design patterns, and best practices suggestions",
  "version": "1",
  "when": {
    "type": "userTriggered",
    "patterns": [
      "src/**/*.ts",
      "analyzer/**/*.py",
      "examples/**/*.py",
      "examples/**/*.js",
      "*.py",
      "*.ts",
      "*.js"
    ],
    "debounceMs": 2000
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long methods, large classes, duplicate code, complex conditionals, and other maintainability issues\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check for adherence to language-specific best practices (Python PEP 8, TypeScript conventions)\n4. **Performance**: Identify potential performance bottlenecks and optimization opportunities\n5. **Readability**: Suggest improvements for variable naming, function structure, and code organization\n6. **Maintainability**: Recommend refactoring opportunities to reduce technical debt\n\nFor each suggestion, provide:\n- Clear explanation of the issue\n- Specific code examples showing the problem\n- Recommended solution with example implementation\n- Impact assessment (readability, performance, maintainability)\n\nMaintain the existing functionality while suggesting improvements. Prioritize suggestions that have the highest impact on code quality."
  }
}